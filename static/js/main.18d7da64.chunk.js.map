{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","setIsModal","setUserId","setCurrentTodo","status","query","isModal","currentTodo","useState","visibleTodos","setVisibleTodos","filteredTodos","setFilteredTodos","useEffect","all","active","filter","todo","completed","formattedTitle","title","toLowerCase","formattedQuery","trim","includes","className","map","id","classNames","type","onClick","userId","TodoFilter","setStatus","setQuery","defaultValue","onChange","event","target","value","placeholder","e","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","modalLoading","setModalLoading","getUser","finally","href","name","App","setTodos","loading","setLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18d7da64.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  todos: Todo[];\n  setIsModal: (value: boolean) => void;\n  setUserId: (value: number) => void;\n  setCurrentTodo: (todo: Todo) => void;\n  status: Status;\n  query: string;\n  isModal: boolean;\n  currentTodo?: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsModal,\n  setUserId,\n  setCurrentTodo,\n  status,\n  query,\n  isModal,\n  currentTodo,\n}) => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  useEffect(() => {\n    setVisibleTodos(todos);\n    setFilteredTodos(todos);\n  }, [todos]);\n\n  useEffect(() => {\n    switch (status) {\n      case Status.all:\n        setVisibleTodos(filteredTodos);\n        break;\n\n      case Status.active:\n        setVisibleTodos(filteredTodos.filter(todo => !todo.completed));\n        break;\n\n      case Status.completed:\n        setVisibleTodos(filteredTodos.filter(todo => todo.completed));\n        break;\n\n      default:\n        setVisibleTodos(filteredTodos);\n        break;\n    }\n  }, [filteredTodos, status]);\n\n  useEffect(() => {\n    setFilteredTodos(todos\n      .filter((todo) => {\n        const { title } = todo;\n        const formattedTitle = title.toLowerCase();\n        const formattedQuery = query.trim().toLowerCase();\n\n        return formattedTitle.includes(formattedQuery);\n      }));\n  }, [query]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setIsModal(true);\n                  setUserId(todo.userId);\n                  setCurrentTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  {isModal && todo === currentTodo\n                    ? (\n                      <i className=\"far fa-eye-slash\" />\n                    )\n                    : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Status } from '../../types/Status';\n\ntype Props = {\n  status: Status;\n  setStatus: (value: Status) => void;\n  setQuery: (value: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  status,\n  setStatus,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          defaultValue={status}\n          onChange={event => setStatus(event.target.value as Status)}\n        >\n          <option value={Status.all}>{Status.all}</option>\n          <option value={Status.active}>{Status.active}</option>\n          <option value={Status.completed}>{Status.completed}</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"Delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = (\n  'https://mate-academy.github.io/react_dynamic-list-of-todos/api'\n);\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  setIsModal: (value: boolean) => void;\n  user?: User | null;\n  currentTodo?: Todo\n  userId: number\n  setUser: (value: User) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setIsModal,\n  user,\n  currentTodo,\n  userId,\n  setUser,\n}) => {\n  const [modalLoading, setModalLoading] = useState(false);\n\n  useEffect(() => {\n    setModalLoading(true);\n\n    getUser(userId)\n      .then(setUser)\n      .finally(() => {\n        setModalLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"modal-close\"\n              onClick={() => setIsModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { User } from './types/User';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isModal, setIsModal] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [user, setUser] = useState<User | null>(null);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(Status.all);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                setStatus={setStatus}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && (\n                <TodoList\n                  todos={todos}\n                  setIsModal={setIsModal}\n                  setUserId={setUserId}\n                  setCurrentTodo={setCurrentTodo}\n                  status={status}\n                  query={query}\n                  isModal={isModal}\n                  currentTodo={currentTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModal && currentTodo && (\n        <TodoModal\n          user={user}\n          currentTodo={currentTodo}\n          setIsModal={setIsModal}\n          userId={userId}\n          setUser={setUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}